<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:a="clr-namespace:Gu.Wpf.FlipView.AttachedProperties"
                    xmlns:gu="clr-namespace:Gu.Wpf.FlipView">

    <Geometry x:Key="LeftArrowPath">F1 M 35.8724,37.6042L 39.0391,40.7708L 50.5182,51.8542L 40.2266,51.8542L 25.1849,37.6041L 40.2266,23.3542L 50.5182,23.3542L 39.0391,34.4375L 35.8724,37.6042 Z</Geometry>
    <Geometry x:Key="RightArrowPath">F1 M 39.8307,37.6042L 36.6641,34.4375L 25.1849,23.3542L 35.4766,23.3542L 50.5182,37.6042L 35.4766,51.8542L 25.1849,51.8542L 36.6641,40.7708L 39.8307,37.6042 Z</Geometry>

    <Style x:Key="ArrowPathStyle"
           TargetType="Path">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Stretch" Value="Fill" />
    </Style>

    <Style x:Key="IndexItemStyle"
           TargetType="ListBoxItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Margin" Value="12,12" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Ellipse x:Name="Bd"
                             Width="20"
                             Height="20"
                             Margin="{TemplateBinding Padding}"
                             Fill="Transparent"
                             Stroke="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}"
                             StrokeThickness="1" />

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ArrowButtonStyle"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Opacity" Value="0.2" />
        <Setter Property="Width" Value="75" />
        <Setter Property="Height" Value="40" />
        <Setter Property="IsManipulationEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="true" />
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ArrowButtonBorderStyle"
           TargetType="{x:Type Border}">
        <Setter Property="Panel.ZIndex" Value="100" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{x:Null}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ShowArrows, RelativeSource={RelativeSource AncestorType=gu:FlipView}}"
                         Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ShowArrows, RelativeSource={RelativeSource AncestorType=gu:FlipView}}"
                         Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type gu:FlipView}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />

        <Setter Property="ShowIndex" Value="True" />
        <Setter Property="IndexItemStyle" Value="{StaticResource IndexItemStyle}" />

        <Setter Property="ShowArrows" Value="True" />
        <Setter Property="ArrowPlacement" Value="Inside" />
        <Setter Property="ArrowButtonStyle" Value="{StaticResource ArrowButtonStyle}" />

        <Setter Property="Focusable" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ClipToBounds" Value="True" />
        <Setter Property="IncreaseInAnimation">
            <Setter.Value>
                <Storyboard>
                    <DoubleAnimation BeginTime="0:0:0"
                                     FillBehavior="HoldEnd"
                                     Storyboard.TargetProperty="Opacity"
                                     From="0"
                                     To="1"
                                     Duration="0:0:0.3" />
                    <DoubleAnimation BeginTime="0:0:0"
                                     FillBehavior="HoldEnd"
                                     Storyboard.TargetProperty="(a:Transform.RelativeOffsetX)"
                                     From="1"
                                     To="0"
                                     Duration="0:0:0.3" />
                </Storyboard>
            </Setter.Value>
        </Setter>

        <Setter Property="IncreaseOutAnimation">
            <Setter.Value>
                <Storyboard>
                    <DoubleAnimation BeginTime="0:0:0"
                                     FillBehavior="HoldEnd"
                                     Storyboard.TargetProperty="Opacity"
                                     From="1"
                                     To="0"
                                     Duration="0:0:0.3" />
                    <DoubleAnimation BeginTime="0:0:0"
                                     FillBehavior="HoldEnd"
                                     Storyboard.TargetProperty="(a:Transform.RelativeOffsetX)"
                                     From="0"
                                     To="-1"
                                     Duration="0:0:0.3" />
                </Storyboard>
            </Setter.Value>
        </Setter>

        <Setter Property="DecreaseInAnimation">
            <Setter.Value>
                <Storyboard>
                    <DoubleAnimation BeginTime="0:0:0"
                                     FillBehavior="HoldEnd"
                                     Storyboard.TargetProperty="Opacity"
                                     From="0"
                                     To="1"
                                     Duration="0:0:0.3" />
                    <DoubleAnimation BeginTime="0:0:0"
                                     FillBehavior="HoldEnd"
                                     Storyboard.TargetProperty="(a:Transform.RelativeOffsetX)"
                                     From="-1"
                                     To="0"
                                     Duration="0:0:0.3" />
                </Storyboard>
            </Setter.Value>
        </Setter>

        <Setter Property="DecreaseOutAnimation">
            <Setter.Value>
                <Storyboard>
                    <DoubleAnimation BeginTime="0:0:0"
                                     FillBehavior="HoldEnd"
                                     Storyboard.TargetProperty="Opacity"
                                     From="1"
                                     To="0"
                                     Duration="0:0:0.3" />
                    <DoubleAnimation BeginTime="0:0:0"
                                     FillBehavior="HoldEnd"
                                     Storyboard.TargetProperty="(a:Transform.RelativeOffsetX)"
                                     From="0"
                                     To="1"
                                     Duration="0:0:0.3" />
                </Storyboard>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type gu:FlipView}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <ListBox x:Name="Index"
                                     Grid.Column="0"
                                     Grid.ColumnSpan="3"
                                     HorizontalAlignment="Center"
                                     Background="Transparent"
                                     BorderThickness="0"
                                     ItemContainerStyle="{TemplateBinding IndexItemStyle}"
                                     ItemsSource="{Binding Items, RelativeSource={RelativeSource AncestorType=gu:FlipView}}"
                                     SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=gu:FlipView}}">
                                <ListBox.Template>
                                    <ControlTemplate TargetType="{x:Type ListBox}">
                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </ControlTemplate>
                                </ListBox.Template>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <UniformGrid HorizontalAlignment="Center"
                                                     IsItemsHost="True"
                                                     Rows="1" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>

                                <ListBox.Style>
                                    <Style TargetType="{x:Type ListBox}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ShowIndex, RelativeSource={RelativeSource TemplatedParent}}"
                                                         Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ShowIndex, RelativeSource={RelativeSource TemplatedParent}}"
                                                         Value="False">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IndexPlacement, RelativeSource={RelativeSource TemplatedParent}}"
                                                         Value="Above">
                                                <Setter Property="Grid.Row" Value="0" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IndexPlacement, RelativeSource={RelativeSource TemplatedParent}}"
                                                         Value="Below">
                                                <Setter Property="Grid.Row" Value="2" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.Style>
                            </ListBox>

                            <!--  ReSharper disable once Xaml.MissingGridIndex Set in style  -->
                            <Border x:Name="LeftArrow">
                                <RepeatButton x:Name="BrowseBackButton"
                                              HorizontalAlignment="Left"
                                              Command="BrowseBack"
                                              Style="{TemplateBinding ArrowButtonStyle}">
                                    <RepeatButton.Content>
                                        <Path Data="{StaticResource LeftArrowPath}"
                                              Style="{StaticResource ArrowPathStyle}" />
                                    </RepeatButton.Content>
                                </RepeatButton>
                                <Border.Style>
                                    <Style BasedOn="{StaticResource ArrowButtonBorderStyle}"
                                           TargetType="{x:Type Border}">
                                        <Setter Property="Grid.Column" Value="1" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowPlacement}"
                                                         Value="InsideTop">
                                                <Setter Property="Grid.Column" Value="1" />
                                                <Setter Property="Grid.Row" Value="0" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowPlacement}"
                                                         Value="Inside">
                                                <Setter Property="Grid.Column" Value="1" />
                                                <Setter Property="Grid.Row" Value="1" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowPlacement}"
                                                         Value="InsideBottom">
                                                <Setter Property="Grid.Column" Value="1" />
                                                <Setter Property="Grid.Row" Value="2" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowPlacement}"
                                                         Value="OutsideTop">
                                                <Setter Property="Grid.Column" Value="0" />
                                                <Setter Property="Grid.Row" Value="0" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowPlacement}"
                                                         Value="Outside">
                                                <Setter Property="Grid.Column" Value="0" />
                                                <Setter Property="Grid.Row" Value="1" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowPlacement}"
                                                         Value="OutsideBottom">
                                                <Setter Property="Grid.Column" Value="0" />
                                                <Setter Property="Grid.Row" Value="2" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>

                            <!--  ReSharper disable once Xaml.MissingGridIndex Set in style  -->
                            <Border x:Name="RightArrow">
                                <RepeatButton x:Name="BrowseForwardButton"
                                              HorizontalAlignment="Right"
                                              Command="BrowseForward"
                                              Style="{TemplateBinding ArrowButtonStyle}">
                                    <RepeatButton.Content>
                                        <Path Data="{StaticResource RightArrowPath}"
                                              Style="{StaticResource ArrowPathStyle}" />
                                    </RepeatButton.Content>
                                </RepeatButton>
                                <Border.Style>
                                    <Style BasedOn="{StaticResource ArrowButtonBorderStyle}"
                                           TargetType="{x:Type Border}">
                                        <Setter Property="Grid.Column" Value="1" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowPlacement}"
                                                         Value="InsideTop">
                                                <Setter Property="Grid.Column" Value="1" />
                                                <Setter Property="Grid.Row" Value="0" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowPlacement}"
                                                         Value="Inside">
                                                <Setter Property="Grid.Column" Value="1" />
                                                <Setter Property="Grid.Row" Value="1" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowPlacement}"
                                                         Value="InsideBottom">
                                                <Setter Property="Grid.Column" Value="1" />
                                                <Setter Property="Grid.Row" Value="2" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowPlacement}"
                                                         Value="OutsideTop">
                                                <Setter Property="Grid.Column" Value="2" />
                                                <Setter Property="Grid.Row" Value="0" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowPlacement}"
                                                         Value="Outside">
                                                <Setter Property="Grid.Column" Value="2" />
                                                <Setter Property="Grid.Row" Value="1" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowPlacement}"
                                                         Value="OutsideBottom">
                                                <Setter Property="Grid.Column" Value="2" />
                                                <Setter Property="Grid.Row" Value="2" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>

                            <gu:GesturePanel x:Name="GesturePanel"
                                             Grid.Row="1"
                                             Grid.Column="1"
                                             Background="Transparent">
                                <gu:TransitionControl x:Name="TransitionControl"
                                                      Content="{TemplateBinding SelectedItem}"
                                                      ContentStringFormat="{TemplateBinding ItemStringFormat}"
                                                      ContentTemplate="{TemplateBinding ItemTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                      InAnimation="{TemplateBinding CurrentOutAnimation}"
                                                      OutAnimation="{TemplateBinding CurrentInAnimation}" />
                            </gu:GesturePanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
